import random
import matplotlib.pyplot as plt

# Define the vertices of the equilateral triangle
vertices = [(0, 0), (1, 0), (0.5, 0.866)]

# Place a random point on the plane
current_point = (random.random(), random.random())

# Define the number of iterations
num_iterations = 1000

# Define a list to store the points generated by the algorithm
points = [current_point]

# Run the chaos game algorithm for the specified number of iterations
for i in range(num_iterations):
    # Choose a random vertex of the triangle
    vertex = random.choice(vertices)
    
    # Calculate the midpoint between the current point and the chosen vertex
    current_point = ((current_point[0] + vertex[0]) / 2, (current_point[1] + vertex[1]) / 2)
    
    # Add the new point to the list
    points.append(current_point)

# Set the colors for the points
colors = ["blue"] * (num_iterations + 1)

# Modify the colors list to color the first 20 points red and the next 100 points green
for i in range(20):
    colors[i+1] = "red"
for i in range(100):
    colors[i+21] = "green"

# Plot the points as a scatter plot
plt.scatter([p[0] for p in points], [p[1] for p in points], s=1, c=colors)

# Set the x and y limits of the plot to be slightly larger than the range of the points
x_min = min([p[0] for p in points])
x_max = max([p[0] for p in points])
y_min = min([p[1] for p in points])
y_max = max([p[1] for p in points])
plt.xlim(x_min - 0.1, x_max + 0.1)
plt.ylim(y_min - 0.1, y_max + 0.1)

# Display the plot
plt.show()
# print(colors)
